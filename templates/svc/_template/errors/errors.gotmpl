// this file is generated by servgen util based on a template at 2021-06-26 10:37:24 +0300 MSK
package errors

import (
	"context"
	"github.com/travelata/kit/er"
	pb "github.com/travelata/{{.service.name}}/proto"
)

var (
	ErrSampleInvalidName     = func(ctx context.Context) error { return er.WithBuilder(pb.ErrCodeSampleInvalidName, "invalid name").C(ctx).Err() }
	ErrSampleIdEmpty         = func(ctx context.Context) error { return er.WithBuilder(pb.ErrCodeSampleIdEmpty, "empty id").C(ctx).Err() }
	ErrSampleNotFound        = func(ctx context.Context, id string) error { return er.WithBuilder(pb.ErrCodeSampleNotFound, "not found").F(er.FF{"id": id}).C(ctx).Err() }
	ErrSampleDeleted         = func(ctx context.Context, id string) error { return er.WithBuilder(pb.ErrCodeSampleDeleted, "already deleted").F(er.FF{"id": id}).C(ctx).Err() }
	ErrSampleStorageCreate   = func(cause error, ctx context.Context) error { return er.WrapWithBuilder(cause, pb.ErrCodeSampleStorageCreate, "").C(ctx).Err() }
	ErrSampleStorageGetDb    = func(cause error, ctx context.Context, id string) error { return er.WrapWithBuilder(cause, pb.ErrCodeSampleStorageGetDb, "").F(er.FF{"id": id}).C(ctx).Err() }
	ErrSampleStorageGetCache = func(cause error, ctx context.Context, id string) error { return er.WrapWithBuilder(cause, pb.ErrCodeSampleStorageGetCache, "").F(er.FF{"id": id}).C(ctx).Err() }
	ErrSampleStorageSetCache = func(cause error, ctx context.Context, id string) error { return er.WrapWithBuilder(cause, pb.ErrCodeSampleStorageSetCache, "").F(er.FF{"id": id}).C(ctx).Err() }
	ErrSampleStorageUpdate   = func(cause error, ctx context.Context, id string) error { return er.WrapWithBuilder(cause, pb.ErrCodeSampleStorageUpdate, "").F(er.FF{"id": id}).C(ctx).Err() }
	ErrSampleStorageGetIds   = func(cause error, ctx context.Context) error { return er.WrapWithBuilder(cause, pb.ErrCodeSampleStorageGetIds, "").C(ctx).Err() }
	ErrSampleIndexSearch     = func(cause error, ctx context.Context) error { return er.WrapWithBuilder(cause, pb.ErrCodeSampleIndexSearch, "").C(ctx).Err() }
)
